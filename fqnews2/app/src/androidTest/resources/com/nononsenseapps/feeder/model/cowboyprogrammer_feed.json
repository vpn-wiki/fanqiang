{
    "version": "https://jsonfeed.org/version/1",
    "title": "Cowboy Programmer",
    "home_page_url": "https://cowboyprogrammer.org/",
    "author": {
        "name": "Space Cowboy",
        "avatar": "https://cowboyprogrammer.org/css/images/avatar.png"
    },
    "icon": "https://cowboyprogrammer.org/css/images/logo.png",
    
    "items": [
        
         {
            "id": "https://cowboyprogrammer.org/2018/03/fixed-vs-variable-interest-rates/",
            "url": "https://cowboyprogrammer.org/2018/03/fixed-vs-variable-interest-rates/",
            "title": "A comparison between fixed and variable interest rates",
            "content_html": "\u003cp\u003eThe data I am using is originally from \u003ca href=\"http://hypotek.swedbank.se/rantor/historiska-rantor/\"\u003eSwedBank\u003c/a\u003e and all data and\ncode is available at \u003ca href=\"https://gitlab.com/spacecowboy/swedish-interest-rates\"\u003eGitLab\u003c/a\u003e. \u003ca href=\"https://gitlab.com/spacecowboy/swedish-interest-rates/raw/master/swedish_interest_rates.csv\"\u003eThe data\u003c/a\u003e contains interest\nrates at 5 years fixed term, 2 years fixed term, and 3 months fixed\nterm (also called variable rate in Sweden) for those dates when any\nrate was changed. The first rates are from 1989-11-01 and the last are\nfrom 2018-02-12. Example of the data:\u003c/p\u003e\n\n\u003ctable border=\"1\" class=\"dataframe\"\u003e\n  \u003cthead\u003e\n    \u003ctr style=\"text-align: right;\"\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e5y\u003c/th\u003e\n      \u003cth\u003e2y\u003c/th\u003e\n      \u003cth\u003e3m\u003c/th\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003eDate\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003cth\u003e1989-11-22\u003c/th\u003e\n      \u003ctd\u003e13.50\u003c/td\u003e\n      \u003ctd\u003e13.50\u003c/td\u003e\n      \u003ctd\u003e12.75\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e1991-01-14\u003c/th\u003e\n      \u003ctd\u003e14.00\u003c/td\u003e\n      \u003ctd\u003e14.75\u003c/td\u003e\n      \u003ctd\u003e15.25\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e1993-01-13\u003c/th\u003e\n      \u003ctd\u003e12.75\u003c/td\u003e\n      \u003ctd\u003e13.00\u003c/td\u003e\n      \u003ctd\u003e13.75\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e1994-11-21\u003c/th\u003e\n      \u003ctd\u003e11.75\u003c/td\u003e\n      \u003ctd\u003e11.50\u003c/td\u003e\n      \u003ctd\u003e9.75\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e1996-03-12\u003c/th\u003e\n      \u003ctd\u003e9.85\u003c/td\u003e\n      \u003ctd\u003e8.95\u003c/td\u003e\n      \u003ctd\u003e9.10\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e2005-09-09\u003c/th\u003e\n      \u003ctd\u003e3.55\u003c/td\u003e\n      \u003ctd\u003e2.97\u003c/td\u003e\n      \u003ctd\u003e3.15\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e2005-10-03\u003c/th\u003e\n      \u003ctd\u003e3.69\u003c/td\u003e\n      \u003ctd\u003e3.09\u003c/td\u003e\n      \u003ctd\u003e3.15\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e2007-12-21\u003c/th\u003e\n      \u003ctd\u003e5.36\u003c/td\u003e\n      \u003ctd\u003e5.25\u003c/td\u003e\n      \u003ctd\u003e5.15\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e2008-01-24\u003c/th\u003e\n      \u003ctd\u003e5.13\u003c/td\u003e\n      \u003ctd\u003e4.94\u003c/td\u003e\n      \u003ctd\u003e5.15\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e2009-03-20\u003c/th\u003e\n      \u003ctd\u003e4.26\u003c/td\u003e\n      \u003ctd\u003e2.83\u003c/td\u003e\n      \u003ctd\u003e2.20\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003eTo make the calculations more convenient I assume that loans are only\nfixed the first day of the month. Example:\u003c/p\u003e\n\n\u003ctable border=\"1\" class=\"dataframe\"\u003e\n  \u003cthead\u003e\n    \u003ctr style=\"text-align: right;\"\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e5y\u003c/th\u003e\n      \u003cth\u003e2y\u003c/th\u003e\n      \u003cth\u003e3m\u003c/th\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003eDate\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n      \u003cth\u003e\u003c/th\u003e\n    \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n    \u003ctr\u003e\n      \u003cth\u003e1990-06-01\u003c/th\u003e\n      \u003ctd\u003e14.50\u003c/td\u003e\n      \u003ctd\u003e14.50\u003c/td\u003e\n      \u003ctd\u003e13.95\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e1992-03-01\u003c/th\u003e\n      \u003ctd\u003e12.50\u003c/td\u003e\n      \u003ctd\u003e13.00\u003c/td\u003e\n      \u003ctd\u003e14.75\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e1993-06-01\u003c/th\u003e\n      \u003ctd\u003e10.75\u003c/td\u003e\n      \u003ctd\u003e10.50\u003c/td\u003e\n      \u003ctd\u003e11.50\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e1998-02-01\u003c/th\u003e\n      \u003ctd\u003e6.70\u003c/td\u003e\n      \u003ctd\u003e6.40\u003c/td\u003e\n      \u003ctd\u003e5.80\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e2001-09-01\u003c/th\u003e\n      \u003ctd\u003e6.55\u003c/td\u003e\n      \u003ctd\u003e5.95\u003c/td\u003e\n      \u003ctd\u003e5.90\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e2004-11-01\u003c/th\u003e\n      \u003ctd\u003e4.85\u003c/td\u003e\n      \u003ctd\u003e3.90\u003c/td\u003e\n      \u003ctd\u003e3.65\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e2009-05-01\u003c/th\u003e\n      \u003ctd\u003e4.15\u003c/td\u003e\n      \u003ctd\u003e2.73\u003c/td\u003e\n      \u003ctd\u003e1.97\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e2010-08-01\u003c/th\u003e\n      \u003ctd\u003e3.99\u003c/td\u003e\n      \u003ctd\u003e2.90\u003c/td\u003e\n      \u003ctd\u003e2.17\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e2011-05-01\u003c/th\u003e\n      \u003ctd\u003e5.29\u003c/td\u003e\n      \u003ctd\u003e4.39\u003c/td\u003e\n      \u003ctd\u003e3.88\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n      \u003cth\u003e2011-11-01\u003c/th\u003e\n      \u003ctd\u003e4.59\u003c/td\u003e\n      \u003ctd\u003e4.14\u003c/td\u003e\n      \u003ctd\u003e4.35\u003c/td\u003e\n    \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003eIf we graph the interest rates we get:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"/images/2018/03/rates.en.png\" alt=\"Interest rates over time\" /\u003e\u003c/p\u003e\n\n\u003cp\u003eYou can see a clear peak in the variable rate when the riksbank set\nthe repo rate at 500% (mortgages \u0026ldquo;only\u0026rdquo; reached 24%). You can also see\nthat during the early nineties the variable rate was higher than the\nfixed rates during relatively long periods. But to compare the actual\ncost over the fixed term we have to compare average rates.\u003c/p\u003e\n\n\u003cp\u003eFor example, let us compare the actual average rates from the first of\nJuly 1991 during 5 years for variable rate (11.96%) and 5 years fixed\nterm (12.25%). Even though with variable rate you\u0026rsquo;d have had a rate of\n24% during a quarter you\u0026rsquo;d still pay less in total over the 5 years.\u003c/p\u003e\n\n\u003cp\u003eIf the same calculation is made for every month you can see how much\nyou would have earned/lost depending on when you started your fixed\nterm. Since 5 years is not evenly divisible by 2 years, the 2 years\nfixed term refers to what the average rate would have been during the\nfirst 5 of the 6 years.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"/images/2018/03/5y_avg_rates.en.png\" alt=\"Average interest rate over 5 years\" /\u003e\u003c/p\u003e\n\n\u003cp\u003eIt\u0026rsquo;s quite clear that variable rate has nearly always been the most\nprofitable alternative. At three seperate occasions it would have been\nmore profitable to pick a 5 year fixed term: at the of 1989, the\nbeginning of 1997, and in the middle of 2005. I won\u0026rsquo;t comment on the 2\nyears fixed term since it\u0026rsquo;s not a fair comparison to only look at 5 out of\n6 years.\u003c/p\u003e\n\n\u003cp\u003eIf we compare 2 years fixed term with variable rate:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"/images/2018/03/2y_avg_rates.en.png\" alt=\"Average interest rate over 2 years\" /\u003e\u003c/p\u003e\n\n\u003cp\u003eAlso here the most profitable choice is generally the variable rate\nhowever during times of rising interest rates getting a fixed 2 year\nterm has been the better choice on several occasions. An important\ndifference to the 5 years term is that you\u0026rsquo;re not locked in for long\nwhen the rates finally go down again (and you\u0026rsquo;re able to switch to\nvariable rate).\u003c/p\u003e\n\n\u003cp\u003eIf we compare all terms during 10 years:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"/images/2018/03/10y_avg_rates.en.png\" alt=\"Average interest rate over 10 years\" /\u003e\u003c/p\u003e\n\n\u003cp\u003eHere it is clear that the variable rate is the most profitable.\u003c/p\u003e\n\n\u003cp\u003eEven though it has been possible at certain occasions (29 years and\nonly 3 short occasions!) to get a fixed term for 5 years and pay less\noverall than with variable rate, I think it\u0026rsquo;s far too improbable that\none is able to do it at the right time. You\u0026rsquo;re almost guaranteed to be\npaying more in the end.\u003c/p\u003e\n\n\u003cp\u003eGetting a fixed term for 2 years is more probable to be profitable,\nbut even here it is more probable not to be.\u003c/p\u003e\n",
            "date_published": "2018-03-05T23:00:00+02:00",
            "image": "https://cowboyprogrammer.org/images/2018/03/5y_avg_rates.en.png"
        }
        
        , {
            "id": "https://cowboyprogrammer.org/2016/10/reduce-colors-in-images/",
            "url": "https://cowboyprogrammer.org/2016/10/reduce-colors-in-images/",
            "title": "Reduce the size of images even further by reducing number of colors with Gimp",
            "content_html": "\n\n\u003cp\u003eIn Gimp you go to \u003cem\u003eImage\u003c/em\u003e in the top menu bar and select \u003cem\u003eMode\u003c/em\u003e\nfollowed by \u003cem\u003eIndexed\u003c/em\u003e. Now you see a popup where you can select the\nnumber of colors for a generated optimum palette.\u003c/p\u003e\n\n\u003cp\u003eYou\u0026rsquo;ll have to experiment a little because it will depend on your\nimage.\u003c/p\u003e\n\n\u003cp\u003eI used this approach to shrink the size of the cover image in\n\u003ca href=\"/2016/08/zopfli_all_the_things/\"\u003ethe_zopfli post\u003c/a\u003e from a 37KB (JPG) to just 15KB\n(PNG, all PNG sizes listed include Zopfli compression btw).\u003c/p\u003e\n\n\u003ch2 id=\"straight-jpg-to-png-conversion-124kb\"\u003eStraight JPG to PNG conversion: 124KB\u003c/h2\u003e\n\n\u003cp\u003e\u003cimg src=\"/images/2017/10/zopfli_all_the_things.png\" alt=\"PNG version RGB colors\" /\u003e\u003c/p\u003e\n\n\u003cp\u003eFirst off, I exported the JPG file as a PNG file. This PNG file had a\nwhopping 124KB! Clearly there was some bloat being stored.\u003c/p\u003e\n\n\u003ch2 id=\"256-colors-40kb\"\u003e256 colors: 40KB\u003c/h2\u003e\n\n\u003cp\u003eReducing from RGB to only 256 colors has no visible effect to my eyes.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"/images/2017/10/zopfli_all_the_things_256.png\" alt=\"256 colors\" /\u003e\u003c/p\u003e\n\n\u003ch2 id=\"128-colors-34kb\"\u003e128 colors: 34KB\u003c/h2\u003e\n\n\u003cp\u003eStill no difference.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"/images/2017/10/zopfli_all_the_things_128.png\" alt=\"128 colors\" /\u003e\u003c/p\u003e\n\n\u003ch2 id=\"64-colors-25kb\"\u003e64 colors: 25KB\u003c/h2\u003e\n\n\u003cp\u003eYou can start to see some artifacting in the shadow behind the text.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"/images/2017/10/zopfli_all_the_things_64.png\" alt=\"64 colors\" /\u003e\u003c/p\u003e\n\n\u003ch2 id=\"32-colors-15kb\"\u003e32 colors: 15KB\u003c/h2\u003e\n\n\u003cp\u003eIn my opinion this is the sweet spot. The shadow artifacting is barely\nnoticable but the size is significantly reduced.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"/images/2017/10/zopfli_all_the_things_32.png\" alt=\"32 colors\" /\u003e\u003c/p\u003e\n\n\u003ch2 id=\"16-colors-11kb\"\u003e16 colors: 11KB\u003c/h2\u003e\n\n\u003cp\u003eClear artifacting in the text shadow and the yellow (fire?) in the\nbackground has developed an outline.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"/images/2017/10/zopfli_all_the_things_16.png\" alt=\"16 colors\" /\u003e\u003c/p\u003e\n\n\u003ch2 id=\"8-colors-7-3kb\"\u003e8 colors: 7.3KB\u003c/h2\u003e\n\n\u003cp\u003eThe broom has shifted in color from a clear brown to almost grey. Text\nshadow is just a grey blob at this point. Even clearer outline\ndeveloped on the yellow background.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"/images/2017/10/zopfli_all_the_things_8.png\" alt=\"8 colors\" /\u003e\u003c/p\u003e\n\n\u003ch2 id=\"4-colors-4-3kb\"\u003e4 colors: 4.3KB\u003c/h2\u003e\n\n\u003cp\u003eInterestingly enough, I think 4 colors looks better than 8 colors. The outline in the background has disappeared because there\u0026rsquo;s not enough color spectrum to render it. The broom is now black and filled areas tend to get a white separator to the outlines.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"/images/2017/10/zopfli_all_the_things_4.png\" alt=\"4 colors\" /\u003e\u003c/p\u003e\n\n\u003ch2 id=\"2-colors-2-4kb\"\u003e2 colors: 2.4KB\u003c/h2\u003e\n\n\u003cp\u003eWell, at least the silhouette is well defined at this point I guess.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"/images/2017/10/zopfli_all_the_things_2.png\" alt=\"2 colors\" /\u003e\u003c/p\u003e\n",
            "date_published": "2016-10-21T00:27:00+02:00",
            "image": "https://cowboyprogrammer.org/images/2017/10/gimp_image_mode_index.png"
        }
        
        , {
            "id": "https://cowboyprogrammer.org/2016/10/dont-start-service-on-install-of-debian-package/",
            "url": "https://cowboyprogrammer.org/2016/10/dont-start-service-on-install-of-debian-package/",
            "title": "Don't start service on installation of Debian package",
            "content_html": "\u003cp\u003eA clear difference between Debian/Ubuntu and for example Red\nHat/Fedora is that packages which include system services will enable\nand start those services at install time in Debian/Ubuntu whereas they\nwill not start automatically in Red Hat/Fedora.\u003c/p\u003e\n\n\u003cp\u003eSometimes it would be very convenient if the service would \u003cem\u003enot\u003c/em\u003e start\nautomatically, for example if you need to configure the service before\nstarting it for the first time.\u003c/p\u003e\n\n\u003cp\u003eTo prevent the automatic start of system services at install time in\nDebian, just set the \u003ccode\u003eRUNLEVEL\u003c/code\u003e environment variable like so:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eRUNLEVEL=1 apt install -y PKG_NAME\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThen you are free to configure your system before you start the\nservice for real:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003esystemctl enable PKG_NAME\nsystemctl start PKG_NAME\n\u003c/code\u003e\u003c/pre\u003e\n",
            "date_published": "2016-10-19T00:00:00+02:00",
            "image": "https://cowboyprogrammer.org/images/Ardebian_logo_512_0.png"
        }
        
        , {
            "id": "https://cowboyprogrammer.org/2016/09/reboot_machine_on_wrong_password/",
            "url": "https://cowboyprogrammer.org/2016/09/reboot_machine_on_wrong_password/",
            "title": "Rebooting on wrong password",
            "content_html": "\n\n\u003cp\u003eHaving an encrypted hard drive is all well and good, but chances are\nthat if someone is gonna steal your laptop, it\u0026rsquo;s probably not going to\nbe turned off. Most likely, it will be stolen in a powered-on\nstate. And so your encrypted hard drive doesn\u0026rsquo;t increase your security\nat all since it\u0026rsquo;s currently unlocked.\u003c/p\u003e\n\n\u003cp\u003eIn my mind, it\u0026rsquo;s a slight improvement if the computer somehow can\nshutdown if someone is trying to gain access to it. That way, the hard\ndrive is no longer accessible and the number of possible attack\nvectors go down drastically. And so, if you type the wrong password 3\ntimes on my laptop, it shuts down.\u003c/p\u003e\n\n\u003cp\u003eThis is accomplished by using \u003ccode\u003ePAM\u003c/code\u003e, and its ability to invoke an\narbitrary script as part of the login flow via \u003ccode\u003epam_exec.so\u003c/code\u003e. The\nscript itself looks like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\" style=\"background: #f0f0f0\"\u003e\u003cpre style=\"line-height: 125%\"\u003e\u003cspan\u003e\u003c/span\u003e\u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e#!/bin/bash\u003c/span\u003e\n\u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e# Do not add -eu, you need to allow empty variables here!\u003c/span\u003e\n\n\u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e# To be used with PAM. Look in /etc/pam.d for the script that your\u003c/span\u003e\n\u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e# screensaver etc uses. Typically it references common-account and common-auth.\u003c/span\u003e\n\u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e#\u003c/span\u003e\n\u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e# In common-auth, add this as the first line\u003c/span\u003e\n\u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e#auth       optional     pam_exec.so debug /path/to/wrongpassword.sh\u003c/span\u003e\n\u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e#\u003c/span\u003e\n\u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e# In common-account, add this as the first line\u003c/span\u003e\n\u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e#account    required     pam_exec.so debug /path/to/wrongpassword.sh\u003c/span\u003e\n\u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e#\u003c/span\u003e\n\n\u003cspan style=\"color: #bb60d5\"\u003eCOUNTFILE\u003c/span\u003e\u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003e\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;/var/log/failed_login_count\u0026quot;\u003c/span\u003e\n\n\u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e# Make sure file exists\u003c/span\u003e\n\u003cspan style=\"color: #007020; font-weight: bold\"\u003eif\u003c/span\u003e \u003cspan style=\"color: #666666\"\u003e[\u003c/span\u003e ! -f \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;\u003c/span\u003e\u003cspan style=\"color: #70a0d0; font-style: italic\"\u003e${\u003c/span\u003e\u003cspan style=\"color: #bb60d5\"\u003eCOUNFILE\u003c/span\u003e\u003cspan style=\"color: #70a0d0; font-style: italic\"\u003e}\u003c/span\u003e\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;\u003c/span\u003e \u003cspan style=\"color: #666666\"\u003e]\u003c/span\u003e;\u003cspan style=\"color: #007020; font-weight: bold\"\u003ethen\u003c/span\u003e\n  touch \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;\u003c/span\u003e\u003cspan style=\"color: #70a0d0; font-style: italic\"\u003e${\u003c/span\u003e\u003cspan style=\"color: #bb60d5\"\u003eCOUNTFILE\u003c/span\u003e\u003cspan style=\"color: #70a0d0; font-style: italic\"\u003e}\u003c/span\u003e\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;\u003c/span\u003e\n  chmod \u003cspan style=\"color: #40a070\"\u003e777\u003c/span\u003e \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;\u003c/span\u003e\u003cspan style=\"color: #70a0d0; font-style: italic\"\u003e${\u003c/span\u003e\u003cspan style=\"color: #bb60d5\"\u003eCOUNTFILE\u003c/span\u003e\u003cspan style=\"color: #70a0d0; font-style: italic\"\u003e}\u003c/span\u003e\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;\u003c/span\u003e\n\u003cspan style=\"color: #007020; font-weight: bold\"\u003efi\u003c/span\u003e\n\n\u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e# Read value in it\u003c/span\u003e\n\u003cspan style=\"color: #bb60d5\"\u003eCOUNT\u003c/span\u003e\u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003e\u003cspan style=\"color: #007020; font-weight: bold\"\u003e$(\u003c/span\u003ecat \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;\u003c/span\u003e\u003cspan style=\"color: #70a0d0; font-style: italic\"\u003e${\u003c/span\u003e\u003cspan style=\"color: #bb60d5\"\u003eCOUNTFILE\u003c/span\u003e\u003cspan style=\"color: #70a0d0; font-style: italic\"\u003e}\u003c/span\u003e\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;\u003c/span\u003e\u003cspan style=\"color: #007020; font-weight: bold\"\u003e)\u003c/span\u003e\n\u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e# Increment it\u003c/span\u003e\n\u003cspan style=\"color: #bb60d5\"\u003eCOUNT\u003c/span\u003e\u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003e\u003cspan style=\"color: #007020; font-weight: bold\"\u003e$((\u003c/span\u003eCOUNT+1\u003cspan style=\"color: #007020; font-weight: bold\"\u003e))\u003c/span\u003e\n\u003cspan style=\"color: #007020\"\u003eecho\u003c/span\u003e \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;\u003c/span\u003e\u003cspan style=\"color: #70a0d0; font-style: italic\"\u003e${\u003c/span\u003e\u003cspan style=\"color: #bb60d5\"\u003eCOUNT\u003c/span\u003e\u003cspan style=\"color: #70a0d0; font-style: italic\"\u003e}\u003c/span\u003e\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;\u003c/span\u003e \u0026gt; \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;\u003c/span\u003e\u003cspan style=\"color: #70a0d0; font-style: italic\"\u003e${\u003c/span\u003e\u003cspan style=\"color: #bb60d5\"\u003eCOUNTFILE\u003c/span\u003e\u003cspan style=\"color: #70a0d0; font-style: italic\"\u003e}\u003c/span\u003e\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;\u003c/span\u003e\n\n\u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e# if authentication\u003c/span\u003e\n\u003cspan style=\"color: #007020; font-weight: bold\"\u003eif\u003c/span\u003e \u003cspan style=\"color: #666666\"\u003e[\u003c/span\u003e \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;\u003c/span\u003e\u003cspan style=\"color: #70a0d0; font-style: italic\"\u003e${\u003c/span\u003e\u003cspan style=\"color: #bb60d5\"\u003ePAM_TYPE\u003c/span\u003e\u003cspan style=\"color: #70a0d0; font-style: italic\"\u003e}\u003c/span\u003e\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;\u003c/span\u003e \u003cspan style=\"color: #666666\"\u003e==\u003c/span\u003e \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;auth\u0026quot;\u003c/span\u003e \u003cspan style=\"color: #666666\"\u003e]\u003c/span\u003e; \u003cspan style=\"color: #007020; font-weight: bold\"\u003ethen\u003c/span\u003e\n  \u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e# The count will be at 4 after 3 wrong tries\u003c/span\u003e\n  \u003cspan style=\"color: #007020; font-weight: bold\"\u003eif\u003c/span\u003e \u003cspan style=\"color: #666666\"\u003e[\u003c/span\u003e \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;\u003c/span\u003e\u003cspan style=\"color: #70a0d0; font-style: italic\"\u003e${\u003c/span\u003e\u003cspan style=\"color: #bb60d5\"\u003eCOUNT\u003c/span\u003e\u003cspan style=\"color: #70a0d0; font-style: italic\"\u003e}\u003c/span\u003e\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;\u003c/span\u003e -ge \u003cspan style=\"color: #40a070\"\u003e4\u003c/span\u003e \u003cspan style=\"color: #666666\"\u003e]\u003c/span\u003e; \u003cspan style=\"color: #007020; font-weight: bold\"\u003ethen\u003c/span\u003e\n    \u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e# Shutdown in 1 min\u003c/span\u003e\n    \u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e#/usr/bin/shutdown --no-wall -h +1\u003c/span\u003e\n    \u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e# This is a hack because the line above gives a segfault in logind\u003c/span\u003e\n    \u003cspan style=\"color: #007020\"\u003eecho\u003c/span\u003e \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;0\u0026quot;\u003c/span\u003e \u0026gt; \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;\u003c/span\u003e\u003cspan style=\"color: #70a0d0; font-style: italic\"\u003e${\u003c/span\u003e\u003cspan style=\"color: #bb60d5\"\u003eCOUNTFILE\u003c/span\u003e\u003cspan style=\"color: #70a0d0; font-style: italic\"\u003e}\u003c/span\u003e\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;\u003c/span\u003e\n    systemctl poweroff\n  \u003cspan style=\"color: #007020; font-weight: bold\"\u003efi\u003c/span\u003e\n\u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e# If authentication succeeded, and we are now in account phase\u003c/span\u003e\n\u003cspan style=\"color: #007020; font-weight: bold\"\u003eelif\u003c/span\u003e \u003cspan style=\"color: #666666\"\u003e[\u003c/span\u003e \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;\u003c/span\u003e\u003cspan style=\"color: #70a0d0; font-style: italic\"\u003e${\u003c/span\u003e\u003cspan style=\"color: #bb60d5\"\u003ePAM_TYPE\u003c/span\u003e\u003cspan style=\"color: #70a0d0; font-style: italic\"\u003e}\u003c/span\u003e\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;\u003c/span\u003e \u003cspan style=\"color: #666666\"\u003e==\u003c/span\u003e \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;account\u0026quot;\u003c/span\u003e \u003cspan style=\"color: #666666\"\u003e]\u003c/span\u003e; \u003cspan style=\"color: #007020; font-weight: bold\"\u003ethen\u003c/span\u003e\n  \u003cspan style=\"color: #007020\"\u003eecho\u003c/span\u003e \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;0\u0026quot;\u003c/span\u003e \u0026gt; \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;\u003c/span\u003e\u003cspan style=\"color: #70a0d0; font-style: italic\"\u003e${\u003c/span\u003e\u003cspan style=\"color: #bb60d5\"\u003eCOUNTFILE\u003c/span\u003e\u003cspan style=\"color: #70a0d0; font-style: italic\"\u003e}\u003c/span\u003e\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;\u003c/span\u003e\n  \u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e# Cancel shutdown which was just issued\u003c/span\u003e\n  shutdown -c\n\u003cspan style=\"color: #007020; font-weight: bold\"\u003efi\u003c/span\u003e\n\n\u003cspan style=\"color: #007020\"\u003eexit\u003c/span\u003e \u003cspan style=\"color: #40a070\"\u003e0\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\n\u003cp\u003eOn my Debian system, PAM ends up looking at \u003ccode\u003e/etc/pam.d/common-auth\u003c/code\u003e\nand \u003ccode\u003e/etc/pam.d/common-account\u003c/code\u003e. These are invoked in different parts\nof the authentication flow. In \u003ccode\u003ecommon-auth\u003c/code\u003e, add this as the first\nline:\u003c/p\u003e\n\u003cdiv class=\"highlight\" style=\"background: #f0f0f0\"\u003e\u003cpre style=\"line-height: 125%\"\u003e\u003cspan\u003e\u003c/span\u003eauth optional pam_exec.so debug /path/to/wrongpassword.sh\n\u003c/pre\u003e\u003c/div\u003e\n\n\u003cp\u003eAnd then in \u003ccode\u003ecommon-account\u003c/code\u003e, add this as the first line:\u003c/p\u003e\n\u003cdiv class=\"highlight\" style=\"background: #f0f0f0\"\u003e\u003cpre style=\"line-height: 125%\"\u003e\u003cspan\u003e\u003c/span\u003eaccount required pam_exec.so debug /path/to/wrongpassword.sh\n\u003c/pre\u003e\u003c/div\u003e\n\n\u003cp\u003eYou can try it immediately if it works. Lock your screen, and type the\nwrong password 4 times. If it works, your computer should shut down.\u003c/p\u003e\n\n\u003ch2 id=\"warning-do-not-enable-on-servers\"\u003eWARNING: DO NOT ENABLE ON SERVERS\u003c/h2\u003e\n\n\u003cp\u003eThis is \u003cstrong\u003eNOT\u003c/strong\u003e something you want to do on any machine. Most notably,\nit\u0026rsquo;s probably a huge mistake to copy this verbatim on a machine which\naccepts remote connections. In that case, you essentially enable\nanyone to DOS you by entering the wrong password via SSH or\nsimilarly. So don\u0026rsquo;t do this if you allow remote connections to your\nmachine (which shouldn\u0026rsquo;t be a thing on a laptop).\u003c/p\u003e\n",
            "date_published": "2016-09-28T22:57:21+02:00"
        }
        
        , {
            "id": "https://cowboyprogrammer.org/2016/08/zopfli_all_the_things/",
            "url": "https://cowboyprogrammer.org/2016/08/zopfli_all_the_things/",
            "title": "Compress all the images!",
            "content_html": "\n\n\u003cp\u003e\u003cem\u003eUpdate 2016-11-22: Made the Makefile compatible with BSD sed (MacOS)\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eOne advantage that static sites, such as those built by \u003ca href=\"https://gohugo.io\"\u003eHugo\u003c/a\u003e,\nprovide is fast loading times. Because there is no processing to be\ndone, no server side rendering, no database lookups, loading times are\njust as fast as you can serve the files that make up the page. This\nmeans that bandwidth becomes the primary bottleneck, which\nincidentally is\n\u003ca href=\"https://webmasters.googleblog.com/2010/04/using-site-speed-in-web-search-ranking.html\"\u003eone of the factors used by Google to calculate your search ranking\u003c/a\u003e. See\nalso\n\u003ca href=\"https://developers.google.com/speed/pagespeed/insights\"\u003ePagespeed Insights\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"compressing-images\"\u003eCompressing images\u003c/h2\u003e\n\n\u003cp\u003eBecause the largest pieces of a page typically consist of images, it\nstands to reason that if we can make the images smaller, we can make\nthe page load faster. Luckily there exists methods that can compress\nimages \u003cem\u003elosslessly\u003c/em\u003e. That means that the quality stays exactly the\nsame, the page only loads faster. That seemed like a no-brainer to me\nso I compressed all the images on the site using \u003ca href=\"http://advsys.net/ken/utils.htm\"\u003ePNGout\u003c/a\u003e as\n\u003ca href=\"https://blog.codinghorror.com/getting-the-most-out-of-png/\"\u003eadvised by Jeff Atwood\u003c/a\u003e. I mean, who doesn\u0026rsquo;t\nlike free bandwidth?\u003c/p\u003e\n\n\u003cp\u003eA new algorithm called \u003ca href=\"https://github.com/google/zopfli\"\u003eZopfli\u003c/a\u003e (open sourced by Google,\n\u003ca href=\"https://blog.codinghorror.com/zopfli-optimization-literally-free-bandwidth/\"\u003ealso mentioned by Jeff\u003c/a\u003e) claims even better\nresults than PNGout though. Results on this site\u0026rsquo;s images confirm\nthose claims. Running the tool on images \u003cem\u003ealready compressed by\nPNGout\u003c/em\u003e gives output such as this:\u003c/p\u003e\n\u003cdiv class=\"highlight\" style=\"background: #f0f0f0\"\u003e\u003cpre style=\"line-height: 125%\"\u003e\u003cspan\u003e\u003c/span\u003e./zopflipng --prefix=\u0026quot;zopfli_\u0026quot; static/images/2014/Dec/Screenshot-from-2014-12-29-13-28-29.png\nOptimizing static/images/2014/Dec/Screenshot-from-2014-12-29-13-28-29.png\nInput size: 89420 (87K)\nResult size: 90361 (88K). Percentage of original: 101.052%\nPreserving original PNG since it was smaller\n\n./zopflipng --prefix=\u0026quot;zopfli_\u0026quot; static/images/2014/Jun/Jenkins_install_git.png\nOptimizing static/images/2014/Jun/Jenkins_install_git.png\nInput size: 189406 (184K)\nResult size: 166362 (162K). Percentage of original: 87.834%\nResult is smaller\n\n./zopflipng --prefix=\u0026quot;zopfli_\u0026quot; static/images/2014/Jun/jenkins_batch.png\nOptimizing static/images/2014/Jun/jenkins_batch.png\nInput size: 21933 (21K)\nResult size: 16255 (15K). Percentage of original: 74.112%\nResult is smaller\n\n./zopflipng --prefix=\u0026quot;zopfli_\u0026quot; static/images/2014/Jun/jenkins_build_step.png\nOptimizing static/images/2014/Jun/jenkins_build_step.png\nInput size: 8184 (7K)\nResult size: 6809 (6K). Percentage of original: 83.199%\nResult is smaller\n\n./zopflipng --prefix=\u0026quot;zopfli_\u0026quot; static/images/2014/Jun/jenkins_config_git.png\nOptimizing static/images/2014/Jun/jenkins_config_git.png\nInput size: 57897 (56K)\nResult size: 47164 (46K). Percentage of original: 81.462%\nResult is smaller\n\u003c/pre\u003e\u003c/div\u003e\n\n\u003cp\u003eThe first result in the example output shows a case where Zopfli would\nactually have made the file bigger (because it was already compressed\nby PNGout, remember). This is nothing you have to worry about because\nit\u0026rsquo;s actually smart enough that it simply copies the original file in\nthat case.\u003c/p\u003e\n\n\u003cp\u003eComparing to both before any compression, and PNGout, yielded the\nfollowing results:\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003c/th\u003e\n\u003cth\u003eMean relative size\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\n\u003ctr\u003e\n\u003ctd\u003eBefore\u003c/td\u003e\n\u003ctd\u003e1.00\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd\u003ePNGout\u003c/td\u003e\n\u003ctd\u003e0.84\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd\u003eZopfliPNG\u003c/td\u003e\n\u003ctd\u003e0.77\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Box_plot\"\u003eBox plot\u003c/a\u003e of results on all images:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"/images/zopfli_boxplot.png\" alt=\"Compression results\" /\u003e\u003c/p\u003e\n\n\u003cp\u003eSource files: \u003ca href=\"/csv/before.csv\"\u003ebefore.csv\u003c/a\u003e,\n\u003ca href=\"/csv/pngout.csv\"\u003epngout.csv\u003c/a\u003e, \u003ca href=\"/csv/zopfli.csv\"\u003ezopfli.csv\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eAnd this is with the default arguments. It is possible squeeze yet a\ncouple of more bytes out of this if you\u0026rsquo;re willing to wait longer.\u003c/p\u003e\n\n\u003ch2 id=\"automate-it-with-make\"\u003eAutomate it with Make\u003c/h2\u003e\n\n\u003cp\u003eAnother joy of using a simple static site is that it is possible to\ncompose regular tools to do useful things. Tools like\n\u003ca href=\"https://www.gnu.org/software/make/\"\u003eMake\u003c/a\u003e. And we can use Make to build the site, as well as\ncompressing images which have not already been compressed. You could\ndo it manually for each new image that you add of course but be\nhonest, you \u003cem\u003eknow\u003c/em\u003e that you\u0026rsquo;re gonna forget to do it at some point. So\nlet\u0026rsquo;s automate it instead!\u003c/p\u003e\n\n\u003cp\u003eThis is the Makefile that I use to build this site with, note that\n\u003ccode\u003epublic\u003c/code\u003e depends on \u003ccode\u003e$(PNG_SENTINELS)\u003c/code\u003e, so I literally can\u0026rsquo;t forget to\ncompress any new images added:\u003c/p\u003e\n\u003cdiv class=\"highlight\" style=\"background: #f0f0f0\"\u003e\u003cpre style=\"line-height: 125%\"\u003e\u003cspan\u003e\u003c/span\u003e\u003cspan style=\"color: #06287e\"\u003e.PHONY\u003c/span\u003e\u003cspan style=\"color: #666666\"\u003e:\u003c/span\u003e help build server server-with-drafts clean zopfli\n\n\u003cspan style=\"color: #bb60d5\"\u003ePNG_SENTINELS\u003c/span\u003e\u003cspan style=\"color: #666666\"\u003e:=\u003c/span\u003e \u003cspan style=\"color: #007020; font-weight: bold\"\u003e$(\u003c/span\u003eshell find . -path ./public -prune -o -name \u003cspan style=\"color: #4070a0\"\u003e\u0026#39;*.png\u0026#39;\u003c/span\u003e -print | sed \u003cspan style=\"color: #4070a0\"\u003e\u0026#39;s|\\(.\\+/\\)\\(.\\+.png\\)|\\1.\\2.zopfli|g\u0026#39;\u003c/span\u003e\u003cspan style=\"color: #007020; font-weight: bold\"\u003e)\u003c/span\u003e\n\n\u003cspan style=\"color: #06287e\"\u003ehelp\u003c/span\u003e\u003cspan style=\"color: #666666\"\u003e:\u003c/span\u003e \u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e## Print this help text\u003c/span\u003e\n\t@grep -E \u003cspan style=\"color: #4070a0\"\u003e\u0026#39;^[a-zA-Z_-]+:.*?## .*$$\u0026#39;\u003c/span\u003e \u003cspan style=\"color: #007020; font-weight: bold\"\u003e$(\u003c/span\u003eMAKEFILE_LIST\u003cspan style=\"color: #007020; font-weight: bold\"\u003e)\u003c/span\u003e | awk \u003cspan style=\"color: #4070a0\"\u003e\u0026#39;BEGIN {FS = \u0026quot;:.*?## \u0026quot;}; {printf \u0026quot;\\033[36m%-30s\\033[0m %s\\n\u0026quot;, $$1, $$2}\u0026#39;\u003c/span\u003e\n\n\u003cspan style=\"color: #06287e\"\u003eserver\u003c/span\u003e\u003cspan style=\"color: #666666\"\u003e:\u003c/span\u003e \u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e## Run hugo server\u003c/span\u003e\n\thugo server\n\n\u003cspan style=\"color: #06287e\"\u003eserver-with-drafts\u003c/span\u003e\u003cspan style=\"color: #666666\"\u003e:\u003c/span\u003e \u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e## Run hugo server and include drafts\u003c/span\u003e\n\thugo server -D\n\n\u003cspan style=\"color: #06287e\"\u003ebuild\u003c/span\u003e\u003cspan style=\"color: #666666\"\u003e:\u003c/span\u003e public \u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e## Build site (will also compress images using zopfli)\u003c/span\u003e\n\n\u003cspan style=\"color: #06287e\"\u003ezopfli\u003c/span\u003e\u003cspan style=\"color: #666666\"\u003e:\u003c/span\u003e \u003cspan style=\"color: #007020; font-weight: bold\"\u003e$(\u003c/span\u003e\u003cspan style=\"color: #bb60d5\"\u003ePNG_SENTINELS\u003c/span\u003e\u003cspan style=\"color: #007020; font-weight: bold\"\u003e)\u003c/span\u003e \u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e## Compress new images using zopfli\u003c/span\u003e\n\n\u003cspan style=\"color: #06287e\"\u003eclean\u003c/span\u003e\u003cspan style=\"color: #666666\"\u003e:\u003c/span\u003e \u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e## Remove the built directory\u003c/span\u003e\n\t@rm -rf public\n\n\u003cspan style=\"color: #06287e\"\u003epublic\u003c/span\u003e\u003cspan style=\"color: #666666\"\u003e:\u003c/span\u003e \u003cspan style=\"color: #007020; font-weight: bold\"\u003e$(\u003c/span\u003e\u003cspan style=\"color: #bb60d5\"\u003ePNG_SENTINELS\u003c/span\u003e\u003cspan style=\"color: #007020; font-weight: bold\"\u003e)\u003c/span\u003e\n\t@rm -rf public\n\thugo\n\n\u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e# Zopfli sentinel rule, assumes zopflipng binary is in the same folder\u003c/span\u003e\n\u003cspan style=\"color: #06287e\"\u003e.%.png.zopfli\u003c/span\u003e\u003cspan style=\"color: #666666\"\u003e:\u003c/span\u003e %.png\n\t./zopflipng --prefix\u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003e\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;zopfli_\u0026quot;\u003c/span\u003e $\u0026lt;\n\t@mv \u003cspan style=\"color: #007020; font-weight: bold\"\u003e$(\u003c/span\u003edir $\u0026lt;\u003cspan style=\"color: #007020; font-weight: bold\"\u003e)\u003c/span\u003ezopfli_\u003cspan style=\"color: #007020; font-weight: bold\"\u003e$(\u003c/span\u003enotdir $\u0026lt;\u003cspan style=\"color: #007020; font-weight: bold\"\u003e)\u003c/span\u003e $\u0026lt;\n\t@touch \u003cspan style=\"color: #bb60d5\"\u003e$@\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\n\u003cp\u003eFor best performance, run make with parallel jobs (change 4 to your\nnumber CPUs): \u003ccode\u003emake -j4 zopfli\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eTo know which files have already been compressed without actually\nrunning Zopfli on it again (which takes a while), sentinel files are\ncreated with this pattern: \u003ccode\u003e.\u0026lt;imgfilename\u0026gt;.zopfli\u003c/code\u003e.  Thus, the next\ntime around, zopfli is only invoked for files which have \u003cem\u003enot\u003c/em\u003e already\nbeen compressed, making it a one-time operation. And when everything\nhas already been compressed, you\u0026rsquo;ll just get this:\u003c/p\u003e\n\u003cdiv class=\"highlight\" style=\"background: #f0f0f0\"\u003e\u003cpre style=\"line-height: 125%\"\u003e\u003cspan\u003e\u003c/span\u003emake: Nothing to be done for \u0026#39;zopfli\u0026#39;.\n\u003c/pre\u003e\u003c/div\u003e\n",
            "date_published": "2016-08-26T13:17:40+02:00",
            "image": "https://cowboyprogrammer.org/images/2017/10/zopfli_all_the_things_32.png"
        }
        
        , {
            "id": "https://cowboyprogrammer.org/2016/07/migrating_from_ghost_to_hugo/",
            "url": "https://cowboyprogrammer.org/2016/07/migrating_from_ghost_to_hugo/",
            "title": "Migrating from Ghost to Hugo",
            "content_html": "\n\n\u003cp\u003eSo I recently migrated this site from \u003ca href=\"https://ghost.org\"\u003eGhost\u003c/a\u003e to \u003ca href=\"https://gohugo.io\"\u003eHugo\u003c/a\u003e\nafter reading a nice article about the Hugo in\n\u003ca href=\"https://www.linuxvoice.com/download-linux-voice-issue-20/\"\u003eLinux Voice #20\u003c/a\u003e (funnily enough, the same issue also\nfeatures an article about Ghost). I originally made the switch to\nGhost from \u003ca href=\"https://jekyllrb.com/\"\u003eJekyll\u003c/a\u003e back in 2014 or so mainly because I could\nnot find a good theme to use. Ghost also seemed to have a lot of cool\nfeatures and it\u0026rsquo;s fun to try new things.\u003c/p\u003e\n\n\u003cp\u003eI think it\u0026rsquo;s safe to say that I am hardly a prolific blogger. I mainly\nwrite about stuff which I personally cannot find on the web which I\nthink should exist, because I will likely need it myself sometime in\nthe future. So it\u0026rsquo;s hardly a surprise that I am not in the target\naudience for Ghost.\u003c/p\u003e\n\n\u003ch2 id=\"things-about-ghost-which-annoy-me\"\u003eThings about Ghost which annoy me\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eIt\u0026rsquo;s written in NodeJS \u0026mdash; people who think JS is a good server\nlanguage also tend to think that it\u0026rsquo;s a good idea to depend on just\nabout any package, and download it in every single build. Which\nbecomes really \u003ca href=\"http://www.theregister.co.uk/2016/03/23/npm_left_pad_chaos/\"\u003efunny sometimes\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003ePoor selection of \u003ca href=\"http://marketplace.ghost.org/\"\u003ethemes\u003c/a\u003e \u0026mdash; this is subjective of\ncourse, but it seems to me that the free options don\u0026rsquo;t have much in\nterms of diversity. Heck, they even call it a \u003cem\u003emarketplace\u003c/em\u003e which\nrubs me the wrong way.\u003c/li\u003e\n\u003cli\u003eThemes end up being quite reliant on JS if you want necessary\nfeatures like syntax highlighting on code snippets \u0026mdash; I often\nbrowse with JS disabled and should be able to view my own site.\u003c/li\u003e\n\u003cli\u003eMarkdown parser treats newlines as significant \u0026mdash; meaning you can\u0026rsquo;t\nhave properly aligned paragraphs in your editor.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThat last point irritates me deeply but it\u0026rsquo;s not as bad as the next point.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eYou can effectively lock an account by entering the wrong password 3\ntimes.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThis requires some explanation. So Ghost, targeting teams of bloggers\nreally, naturally have an account system much like Wordpress. Now, as\nI was surveying the security status of other services I am running, I\nwas wondering how Ghost handled someone trying to brute force your\naccount and decided to simply try it out. Type the wrong password once\ntoo many, and this happens:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"/images/ghost_wrong_password.png\" alt=\"Ghost: typing the wrong password too many times locks your account\" /\u003e\u003c/p\u003e\n\n\u003cp\u003eIt doesn\u0026rsquo;t lock it for a single IP address (I tried from several), it\nlocks the entire account.  Effectively, someone can just set up a\nscript to try an account indefinitely simply with the intention to\nblock someone from logging in.\u003c/p\u003e\n\n\u003cp\u003eThe log doesn\u0026rsquo;t even show login attempts, so there is no way to\nimplement sensible blocking strategies using something like \u003ca href=\"http://www.fail2ban.org\"\u003efail2ban\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe whole thing left a bad taste my mouth so it was a very suitable timing to read an article on \u003ca href=\"https://gohugo.io\"\u003eHugo\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"things-about-hugo-which-excite-me\"\u003eThings about Hugo which excite me\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eMarkdown parser treats newlines correctly\u003c/li\u003e\n\u003cli\u003eIt\u0026rsquo;s a static site generator and not a service \u0026mdash; this meant 100MB\n(10%) of RAM became available on my server and there is no account\nto hack (or block).\u003c/li\u003e\n\u003cli\u003eSupports everything of Ghost (that I am aware of).\u003c/li\u003e\n\u003cli\u003eThe simplicity of Hugo makes it \u003ca href=\"https://npf.io/2014/08/making-it-a-series/\"\u003equite painless\u003c/a\u003e to\ndo useful things compared to\n\u003ca href=\"https://github.com/TryGhost/Ghost/issues/4818\"\u003eignored feature requests\u003c/a\u003e for the same in Ghost.\u003c/li\u003e\n\u003cli\u003eCan do server side syntax highlighting using Pygments.\u003c/li\u003e\n\u003cli\u003eSome really nice \u003ca href=\"http://themes.gohugo.io/\"\u003ethemes\u003c/a\u003e are available, and they are\nall free.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2 id=\"migrating-all-data-from-ghost\"\u003eMigrating all data from Ghost\u003c/h2\u003e\n\n\u003cp\u003eMigrating from Ghost also turned about to be really painless. There\nwere several scripts around for exactly this but they all turned out\nto be written in \u003ca href=\"https://gist.github.com/vjeantet/d1f6cf824a2344dd6b4e\"\u003eodd languages\u003c/a\u003e, and did not actually\nmigrate all the metadata in Ghost. So I wrote my own in Python with\nthese \u003cem\u003ekiller features\u003c/em\u003e:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eMigrates tags.\u003c/li\u003e\n\u003cli\u003eMigrates dates.\u003c/li\u003e\n\u003cli\u003eMigrates drafts as drafts.\u003c/li\u003e\n\u003cli\u003eCreates aliases in your posts which makes sure that old permalinks\nwill still work!\u003c/li\u003e\n\u003cli\u003eMigrates cover pictures as banner images, just select a theme which\nsupport them.\u003c/li\u003e\n\u003cli\u003eRewrites all relative links so they all still work (this includes\nimages).\u003c/li\u003e\n\u003cli\u003eCode blocks with language definitions like \u003ccode\u003e```language-java\u003c/code\u003e\nare changed to \u003ccode\u003e```java\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\" style=\"background: #f0f0f0\"\u003e\u003cpre style=\"line-height: 125%\"\u003e\u003cspan\u003e\u003c/span\u003e\u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e#!/usr/bin/env python3\u003c/span\u003e\n\u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e# -*- coding: utf-8 -*-\u003c/span\u003e\n\u003cspan style=\"color: #4070a0; font-style: italic\"\u003e\u0026#39;\u0026#39;\u0026#39;\u003c/span\u003e\n\u003cspan style=\"color: #4070a0; font-style: italic\"\u003eA simple program which migrates an exported Ghost blog to Hugo.\u003c/span\u003e\n\u003cspan style=\"color: #4070a0; font-style: italic\"\u003eIt assumes your blog is using the hugo-icarus theme, but should\u003c/span\u003e\n\u003cspan style=\"color: #4070a0; font-style: italic\"\u003ework for any theme. The script will migrate your posts, including\u003c/span\u003e\n\u003cspan style=\"color: #4070a0; font-style: italic\"\u003etags and banner images. Furthermore, it will make sure that\u003c/span\u003e\n\u003cspan style=\"color: #4070a0; font-style: italic\"\u003eall your old post urls will keep working by adding aliases to them.\u003c/span\u003e\n\n\u003cspan style=\"color: #4070a0; font-style: italic\"\u003eThe only thing you need to do yourself is copying the `images/`\u003c/span\u003e\n\u003cspan style=\"color: #4070a0; font-style: italic\"\u003edirectory in your ghost directory to `static/images/` in your hugo\u003c/span\u003e\n\u003cspan style=\"color: #4070a0; font-style: italic\"\u003edirectory. That way, all images will work. The script will rewrite\u003c/span\u003e\n\u003cspan style=\"color: #4070a0; font-style: italic\"\u003eall urls linking to `/content/images` to just `/images`.\u003c/span\u003e\n\u003cspan style=\"color: #4070a0; font-style: italic\"\u003e\u0026#39;\u0026#39;\u0026#39;\u003c/span\u003e\n\n\u003cspan style=\"color: #007020; font-weight: bold\"\u003eimport\u003c/span\u003e \u003cspan style=\"color: #0e84b5; font-weight: bold\"\u003eargparse\u003c/span\u003e\n\u003cspan style=\"color: #007020; font-weight: bold\"\u003eimport\u003c/span\u003e \u003cspan style=\"color: #0e84b5; font-weight: bold\"\u003ejson\u003c/span\u003e\n\u003cspan style=\"color: #007020; font-weight: bold\"\u003efrom\u003c/span\u003e \u003cspan style=\"color: #0e84b5; font-weight: bold\"\u003edatetime\u003c/span\u003e \u003cspan style=\"color: #007020; font-weight: bold\"\u003eimport\u003c/span\u003e date\n\u003cspan style=\"color: #007020; font-weight: bold\"\u003efrom\u003c/span\u003e \u003cspan style=\"color: #0e84b5; font-weight: bold\"\u003eos\u003c/span\u003e \u003cspan style=\"color: #007020; font-weight: bold\"\u003eimport\u003c/span\u003e path\n\u003cspan style=\"color: #007020; font-weight: bold\"\u003efrom\u003c/span\u003e \u003cspan style=\"color: #0e84b5; font-weight: bold\"\u003ecollections\u003c/span\u003e \u003cspan style=\"color: #007020; font-weight: bold\"\u003eimport\u003c/span\u003e defaultdict\n\u003cspan style=\"color: #007020; font-weight: bold\"\u003eimport\u003c/span\u003e \u003cspan style=\"color: #0e84b5; font-weight: bold\"\u003ere\u003c/span\u003e\n\n_post \u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003e \u003cspan style=\"color: #4070a0\"\u003e\u0026#39;\u0026#39;\u0026#39;\u003c/span\u003e\n\u003cspan style=\"color: #4070a0\"\u003e+++\u003c/span\u003e\n\u003cspan style=\"color: #4070a0\"\u003edate = \u0026quot;{date}\u0026quot;\u003c/span\u003e\n\u003cspan style=\"color: #4070a0\"\u003edraft = {draft}\u003c/span\u003e\n\u003cspan style=\"color: #4070a0\"\u003etitle = \u0026quot;\u0026quot;\u0026quot;{title}\u0026quot;\u0026quot;\u0026quot;\u003c/span\u003e\n\u003cspan style=\"color: #4070a0\"\u003eslug = \u0026quot;{slug}\u0026quot;\u003c/span\u003e\n\u003cspan style=\"color: #4070a0\"\u003etags = {tags}\u003c/span\u003e\n\u003cspan style=\"color: #4070a0\"\u003ebanner = \u0026quot;{banner}\u0026quot;\u003c/span\u003e\n\u003cspan style=\"color: #4070a0\"\u003ealiases = {aliases}\u003c/span\u003e\n\u003cspan style=\"color: #4070a0\"\u003e+++\u003c/span\u003e\n\n\u003cspan style=\"color: #4070a0\"\u003e{markdown}\u003c/span\u003e\n\u003cspan style=\"color: #4070a0\"\u003e\u0026#39;\u0026#39;\u0026#39;\u003c/span\u003e\n\n\n\u003cspan style=\"color: #007020; font-weight: bold\"\u003edef\u003c/span\u003e \u003cspan style=\"color: #06287e\"\u003emigrate\u003c/span\u003e(filepath, hugodir):\n    \u003cspan style=\"color: #4070a0; font-style: italic\"\u003e\u0026#39;\u0026#39;\u0026#39;\u003c/span\u003e\n\u003cspan style=\"color: #4070a0; font-style: italic\"\u003e    Parse the Ghost json file and write post files\u003c/span\u003e\n\u003cspan style=\"color: #4070a0; font-style: italic\"\u003e    \u0026#39;\u0026#39;\u0026#39;\u003c/span\u003e\n    \u003cspan style=\"color: #007020; font-weight: bold\"\u003ewith\u003c/span\u003e \u003cspan style=\"color: #007020\"\u003eopen\u003c/span\u003e(filepath, \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;r\u0026quot;\u003c/span\u003e) \u003cspan style=\"color: #007020; font-weight: bold\"\u003eas\u003c/span\u003e fp:\n        ghost \u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003e json\u003cspan style=\"color: #666666\"\u003e.\u003c/span\u003eload(fp)\n\n    data \u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003e ghost[\u003cspan style=\"color: #4070a0\"\u003e\u0026#39;db\u0026#39;\u003c/span\u003e][\u003cspan style=\"color: #40a070\"\u003e0\u003c/span\u003e][\u003cspan style=\"color: #4070a0\"\u003e\u0026#39;data\u0026#39;\u003c/span\u003e]\n\n    tags \u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003e {}\n    \u003cspan style=\"color: #007020; font-weight: bold\"\u003efor\u003c/span\u003e tag \u003cspan style=\"color: #007020; font-weight: bold\"\u003ein\u003c/span\u003e data[\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;tags\u0026quot;\u003c/span\u003e]:\n        tags[tag[\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;id\u0026quot;\u003c/span\u003e]] \u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003e tag[\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;name\u0026quot;\u003c/span\u003e]\n\n    posttags \u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003e defaultdict(\u003cspan style=\"color: #007020\"\u003elist\u003c/span\u003e)\n\n    \u003cspan style=\"color: #007020; font-weight: bold\"\u003efor\u003c/span\u003e posttag \u003cspan style=\"color: #007020; font-weight: bold\"\u003ein\u003c/span\u003e data[\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;posts_tags\u0026quot;\u003c/span\u003e]:\n        posttags[posttag[\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;post_id\u0026quot;\u003c/span\u003e]]\u003cspan style=\"color: #666666\"\u003e.\u003c/span\u003eappend(tags[posttag[\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;tag_id\u0026quot;\u003c/span\u003e]])\n\n    \u003cspan style=\"color: #007020; font-weight: bold\"\u003efor\u003c/span\u003e post \u003cspan style=\"color: #007020; font-weight: bold\"\u003ein\u003c/span\u003e data[\u003cspan style=\"color: #4070a0\"\u003e\u0026#39;posts\u0026#39;\u003c/span\u003e]:\n        draft \u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003e \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;true\u0026quot;\u003c/span\u003e \u003cspan style=\"color: #007020; font-weight: bold\"\u003eif\u003c/span\u003e post[\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;status\u0026quot;\u003c/span\u003e] \u003cspan style=\"color: #666666\"\u003e==\u003c/span\u003e \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;draft\u0026quot;\u003c/span\u003e \u003cspan style=\"color: #007020; font-weight: bold\"\u003eelse\u003c/span\u003e \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;false\u0026quot;\u003c/span\u003e\n        ts \u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003e \u003cspan style=\"color: #007020\"\u003eint\u003c/span\u003e(post[\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;created_at\u0026quot;\u003c/span\u003e]) \u003cspan style=\"color: #666666\"\u003e/\u003c/span\u003e \u003cspan style=\"color: #40a070\"\u003e1000\u003c/span\u003e\n\n        banner \u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003e \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;\u0026quot;\u003c/span\u003e \u003cspan style=\"color: #007020; font-weight: bold\"\u003eif\u003c/span\u003e post[\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;image\u0026quot;\u003c/span\u003e] \u003cspan style=\"color: #007020; font-weight: bold\"\u003eis\u003c/span\u003e \u003cspan style=\"color: #007020\"\u003eNone\u003c/span\u003e \u003cspan style=\"color: #007020; font-weight: bold\"\u003eelse\u003c/span\u003e post[\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;image\u0026quot;\u003c/span\u003e]\n        \u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e# /content/ should not be part of uri anymore\u003c/span\u003e\n        banner \u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003e re\u003cspan style=\"color: #666666\"\u003e.\u003c/span\u003esub(\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;^.*/content[s]?/\u0026quot;\u003c/span\u003e, \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;/\u0026quot;\u003c/span\u003e, banner)\n\n        target \u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003e path\u003cspan style=\"color: #666666\"\u003e.\u003c/span\u003ejoin(hugodir, \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;content/post\u0026quot;\u003c/span\u003e,\n                           \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;{}.md\u0026quot;\u003c/span\u003e\u003cspan style=\"color: #666666\"\u003e.\u003c/span\u003eformat(post[\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;slug\u0026quot;\u003c/span\u003e]))\n\n        aliases \u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003e [\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;/{}/\u0026quot;\u003c/span\u003e\u003cspan style=\"color: #666666\"\u003e.\u003c/span\u003eformat(post[\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;slug\u0026quot;\u003c/span\u003e])]\n\n        \u003cspan style=\"color: #007020; font-weight: bold\"\u003eprint\u003c/span\u003e(\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;Migrating \u0026#39;{}\u0026#39; to {}\u0026quot;\u003c/span\u003e\u003cspan style=\"color: #666666\"\u003e.\u003c/span\u003eformat(post[\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;title\u0026quot;\u003c/span\u003e],\n                                          target))\n\n        hugopost \u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003e _post\u003cspan style=\"color: #666666\"\u003e.\u003c/span\u003eformat(markdown\u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003epost[\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;markdown\u0026quot;\u003c/span\u003e],\n                                title\u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003epost[\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;title\u0026quot;\u003c/span\u003e],\n                                draft\u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003edraft,\n                                slug\u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003epost[\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;slug\u0026quot;\u003c/span\u003e],\n                                date\u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003edate\u003cspan style=\"color: #666666\"\u003e.\u003c/span\u003efromtimestamp(ts)\u003cspan style=\"color: #666666\"\u003e.\u003c/span\u003eisoformat(),\n                                tags\u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003eposttags[post[\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;id\u0026quot;\u003c/span\u003e]],\n                                banner\u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003ebanner,\n                                aliases\u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003ealiases)\n\n        \u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e# this is no longer relevant\u003c/span\u003e\n        hugopost \u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003e hugopost\u003cspan style=\"color: #666666\"\u003e.\u003c/span\u003ereplace(\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;```language-\u0026quot;\u003c/span\u003e, \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;```\u0026quot;\u003c/span\u003e)\n        \u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e# /content/ should not be part of uri anymore\u003c/span\u003e\n        hugopost \u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003e hugopost\u003cspan style=\"color: #666666\"\u003e.\u003c/span\u003ereplace(\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;/content/\u0026quot;\u003c/span\u003e, \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;/\u0026quot;\u003c/span\u003e)\n        hugopost \u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003e re\u003cspan style=\"color: #666666\"\u003e.\u003c/span\u003esub(\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;^.*/content[s]?/\u0026quot;\u003c/span\u003e, \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;/\u0026quot;\u003c/span\u003e, hugopost)\n\n        \u003cspan style=\"color: #007020; font-weight: bold\"\u003ewith\u003c/span\u003e \u003cspan style=\"color: #007020\"\u003eopen\u003c/span\u003e(target, \u003cspan style=\"color: #4070a0\"\u003e\u0026#39;w\u0026#39;\u003c/span\u003e) \u003cspan style=\"color: #007020; font-weight: bold\"\u003eas\u003c/span\u003e fp:\n            \u003cspan style=\"color: #007020; font-weight: bold\"\u003eprint\u003c/span\u003e(hugopost, \u003cspan style=\"color: #007020\"\u003efile\u003c/span\u003e\u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003efp)\n\n\n\u003cspan style=\"color: #007020; font-weight: bold\"\u003edef\u003c/span\u003e \u003cspan style=\"color: #06287e\"\u003emain\u003c/span\u003e():\n    parser \u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003e argparse\u003cspan style=\"color: #666666\"\u003e.\u003c/span\u003eArgumentParser(\n        description\u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003e\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;Migrate an exported Ghost blog to Hugo\u0026quot;\u003c/span\u003e)\n    req \u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003e parser\u003cspan style=\"color: #666666\"\u003e.\u003c/span\u003eadd_argument_group(title\u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003e\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;required arguments\u0026quot;\u003c/span\u003e)\n    req\u003cspan style=\"color: #666666\"\u003e.\u003c/span\u003eadd_argument(\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;-f\u0026quot;\u003c/span\u003e, \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;--file\u0026quot;\u003c/span\u003e, help\u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003e\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;JSON file exported from Ghost\u0026quot;\u003c/span\u003e,\n                     required\u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003e\u003cspan style=\"color: #007020\"\u003eTrue\u003c/span\u003e)\n    req\u003cspan style=\"color: #666666\"\u003e.\u003c/span\u003eadd_argument(\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;-d\u0026quot;\u003c/span\u003e, \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;--dir\u0026quot;\u003c/span\u003e, help\u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003e\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;Directory (root) of Hugo site\u0026quot;\u003c/span\u003e,\n                     required\u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003e\u003cspan style=\"color: #007020\"\u003eTrue\u003c/span\u003e)\n\n    args \u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003e parser\u003cspan style=\"color: #666666\"\u003e.\u003c/span\u003eparse_args()\n\n    migrate(args\u003cspan style=\"color: #666666\"\u003e.\u003c/span\u003efile, args\u003cspan style=\"color: #666666\"\u003e.\u003c/span\u003edir)\n\n\n\u003cspan style=\"color: #007020; font-weight: bold\"\u003eif\u003c/span\u003e \u003cspan style=\"color: #bb60d5\"\u003e__name__\u003c/span\u003e \u003cspan style=\"color: #666666\"\u003e==\u003c/span\u003e \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;__main__\u0026quot;\u003c/span\u003e:\n    main()\n\u003c/pre\u003e\u003c/div\u003e\n\n\u003cp\u003eNext post, I might write about what changes I made to the theme, and\nsome nifty Nginx tricks you can use to stay compatible with old links.\u003c/p\u003e\n",
            "date_published": "2016-07-25T23:55:38+02:00",
            "image": "https://cowboyprogrammer.org/images/hugo-logo.png"
        }
        
        , {
            "id": "https://cowboyprogrammer.org/2016/05/set-refresh-rate-of-screen-from-script/",
            "url": "https://cowboyprogrammer.org/2016/05/set-refresh-rate-of-screen-from-script/",
            "title": "Set refresh rate of screen from script",
            "content_html": "\u003cp\u003eGetting a great new 100 Hz Ultra Wide monitor does not come without its share of tweaking. So it turns out that the refresh you set on your monitor in Nvidia settings (as explained in a \u003ca href=\"https://cowboyprogrammer.org/nvidia-gsync-on-linux/\"\u003eprevious post\u003c/a\u003e does not apply to all the display ports. They apparently count as different screens with different settings or something.\u003c/p\u003e\n\n\u003cp\u003eSo, here\u0026rsquo;s a handy script which you can add to your window manager\u0026rsquo;s autostart applications to set the refresh rate and resolution of your screen, regardless of which actual port you use:\u003c/p\u003e\n\u003cdiv class=\"highlight\" style=\"background: #f0f0f0\"\u003e\u003cpre style=\"line-height: 125%\"\u003e\u003cspan\u003e\u003c/span\u003e\u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e#!/bin/bash -eu\u003c/span\u003e\n\u003cspan style=\"color: #bb60d5\"\u003eRES\u003c/span\u003e\u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003e\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;3440x1440\u0026quot;\u003c/span\u003e\n\u003cspan style=\"color: #bb60d5\"\u003eRR\u003c/span\u003e\u003cspan style=\"color: #666666\"\u003e=\u003c/span\u003e\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;100\u0026quot;\u003c/span\u003e\n\n\u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e# Do for every output, so that it doesn\u0026#39;t matter where you plug in\u003c/span\u003e\n\u003cspan style=\"color: #60a0b0; font-style: italic\"\u003e# your monitor.\u003c/span\u003e\n\u003cspan style=\"color: #007020; font-weight: bold\"\u003efor\u003c/span\u003e output in \u003cspan style=\"color: #007020; font-weight: bold\"\u003e$(\u003c/span\u003exrandr | grep \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;DP-\u0026quot;\u003c/span\u003e | sed -e \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;s/\\(DP-.\\).*/\\1/\u0026quot;\u003c/span\u003e\u003cspan style=\"color: #007020; font-weight: bold\"\u003e)\u003c/span\u003e; \u003cspan style=\"color: #007020; font-weight: bold\"\u003edo\u003c/span\u003e\n  \u003cspan style=\"color: #007020\"\u003eecho\u003c/span\u003e \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;Trying to set mode on \u003c/span\u003e\u003cspan style=\"color: #bb60d5\"\u003e$output\u003c/span\u003e\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;\u003c/span\u003e\n  \u003cspan style=\"color: #007020; font-weight: bold\"\u003eif\u003c/span\u003e xrandr --output \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;\u003c/span\u003e\u003cspan style=\"color: #bb60d5\"\u003e$output\u003c/span\u003e\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;\u003c/span\u003e --mode \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;\u003c/span\u003e\u003cspan style=\"color: #bb60d5\"\u003e$RES\u003c/span\u003e\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;\u003c/span\u003e -r \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;\u003c/span\u003e\u003cspan style=\"color: #bb60d5\"\u003e$RR\u003c/span\u003e\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;\u003c/span\u003e; \u003cspan style=\"color: #007020; font-weight: bold\"\u003ethen\u003c/span\u003e\n    \u003cspan style=\"color: #007020\"\u003eecho\u003c/span\u003e \u003cspan style=\"color: #4070a0\"\u003e\u0026quot;Success: \u003c/span\u003e\u003cspan style=\"color: #bb60d5\"\u003e$RES\u003c/span\u003e\u003cspan style=\"color: #4070a0\"\u003e \u003c/span\u003e\u003cspan style=\"color: #bb60d5\"\u003e$RR\u003c/span\u003e\u003cspan style=\"color: #4070a0\"\u003e Hz set on \u003c/span\u003e\u003cspan style=\"color: #bb60d5\"\u003e$output\u003c/span\u003e\u003cspan style=\"color: #4070a0\"\u003e\u0026quot;\u003c/span\u003e\n  \u003cspan style=\"color: #007020; font-weight: bold\"\u003efi\u003c/span\u003e\n\u003cspan style=\"color: #007020; font-weight: bold\"\u003edone\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\n\u003cp\u003eIt iterates over all the display ports on your graphics card, so it doesn\u0026rsquo;t matter where you plug your monitor in.\u003c/p\u003e\n\n\u003cp\u003eIn XFCE, you\u0026rsquo;d add this script to \u003cem\u003eApplication Autostart\u003c/em\u003e:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"/images/2016/05/Session-and-Startup_033.png\" alt=\"XFCE Application Autostart\" /\u003e\u003c/p\u003e\n",
            "date_published": "2016-05-18T00:00:00+00:00",
            "image": "https://cowboyprogrammer.org/images/2016/05/Selection_034.png"
        }
        
        , {
            "id": "https://cowboyprogrammer.org/2016/04/fixing-the-up-button-in-python-shell-history/",
            "url": "https://cowboyprogrammer.org/2016/04/fixing-the-up-button-in-python-shell-history/",
            "title": "Fixing the up button in Python shell history",
            "content_html": "\u003cp\u003eIn case your python/ipython shell doesn\u0026rsquo;t have a working history, e.g. pressing \u0026#8593; only prints some nonsensical \u003ccode\u003e^[[A\u003c/code\u003e, then you are missing either the \u003ccode\u003ereadline\u003c/code\u003e or \u003ccode\u003encurses\u003c/code\u003e library.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"/images/2016/04/Selection_021.png\" alt=\"Python shell where up doesn't work\" /\u003e\u003c/p\u003e\n\n\u003cp\u003eIpython is more descriptive that something is wrong, but if you\u0026rsquo;re in the habit of mostly using python as a quick calculator, you might never notice:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"/images/2016/04/Selection_022.png\" alt=\"iPython shell where up doesn't work\" /\u003e\u003c/p\u003e\n\n\u003cp\u003eIf you\u0026rsquo;re using \u003ca href=\"http://conda.pydata.org/miniconda.html\"\u003eMiniconda\u003c/a\u003e then just do:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003econda install ncurses readline\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eAnd \u0026#8593; should work:\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"/images/2016/04/Selection_023.png\" alt=\"iPython with working up\" /\u003e\u003c/p\u003e\n",
            "date_published": "2016-04-02T00:00:00+00:00",
            "image": "https://cowboyprogrammer.org/images/2016/04/Selection_021-1.png"
        }
        
        , {
            "id": "https://cowboyprogrammer.org/2016/03/nvidia-gsync-on-linux/",
            "url": "https://cowboyprogrammer.org/2016/03/nvidia-gsync-on-linux/",
            "title": "Nvidia G-Sync and Linux",
            "content_html": "\n\n\u003cp\u003eAfter getting a fancy new monitor with G-Sync support, I was eager to try it out in my Linux gaming setup. While Nvidia fully supports G-Sync in their Linux drivers, it turns out that other components of the system can get in the way. As explained by a \u003ca href=\"https://devtalk.nvidia.com/default/topic/854184/gsync-is-not-working/?offset=1\"\u003epost on the Nvidia forums\u003c/a\u003e:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eFor G-SYNC to work, the application has to be able to flip and the symptoms you\u0026rsquo;re describing here sound like it\u0026rsquo;s not able to flip in your configuration. There are a variety of reasons why flipping might not be working, but the most likely culprits here are either the compositor getting in the way, or the game not being completely full-screen. The full-screen requirement includes the game being completely unoccluded, so if your window manager is drawing something on top of the game, even just by one pixel, it will prevent flipping. Full-screen also means that it has to cover the entire X screen, which includes both monitors if you have them both enabled.\u003c/p\u003e\n\n\u003cp\u003eCan you please try a different window manager / desktop environment to see if the behavior changes?\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eSince only a minority of PC-gamers are actually on Linux, and only a minority of those actually have G-Sync capable monitors, Googling for assistance was\u0026hellip; challenging. So, for any other Linux gamers out there, here is a short guide on how to enable G-Sync and verify that it works. Some of the steps are XFCE specific, as this is my window manager of choice on my gaming PC. If you are using a different window manager, you\u0026rsquo;ll have to look through your options to find the equivalent settings.\u003c/p\u003e\n\n\u003ch2 id=\"nvidia-settings\"\u003eNvidia settings\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eSync to VBlank: Optional\u003c/li\u003e\n\u003cli\u003eAllow Flipping: Required\u003c/li\u003e\n\u003cli\u003eAllow G-SYNC: Required\u003c/li\u003e\n\u003cli\u003eEnable G-SYNC Visual Indicator: Optional\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe only two required settings are \u003cem\u003eflipping\u003c/em\u003e and \u003cem\u003eG-Sync\u003c/em\u003e, the others are optional. Enabling \u003cem\u003eSync to VBlank\u003c/em\u003e (VSync) in combination with G-Sync only prevents the GPU from generating an FPS beyond your monitor\u0026rsquo;s max refresh rate (which you can\u0026rsquo;t see anyway). It is turned off below the max refresh rate when G-Sync is enabled.\u003c/p\u003e\n\n\u003cp\u003eThe visual indicator is useful here to see that G-Sync is working. If all goes well, you should see a green \u0026ldquo;G-SYNC\u0026rdquo; text in the corner when running a game.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"/images/2016/03/NVIDIA-X-Server-Settings_007.png\" alt=\"Nvidia settings\" /\u003e\u003c/p\u003e\n\n\u003ch2 id=\"disable-compositor\"\u003eDisable compositor\u003c/h2\u003e\n\n\u003cp\u003eAs mentioned in the forum post, a compositor will prevent G-Sync from activating because essentially something is rendering above the game. The same reason prevents G-Sync from working in Window mode (unlike Windows, where G-Sync does not require fullscreen).\u003c/p\u003e\n\n\u003cp\u003eFor XFCE, go to \u003cem\u003eWindow Manager Tweaks\u003c/em\u003e under \u003cem\u003eSettings\u003c/em\u003e\n\u003cimg src=\"/images/2016/03/Selection_004.png\" alt=\"XFCE Settings\" /\u003e\u003c/p\u003e\n\n\u003cp\u003eThen under the \u003cem\u003eCompositor\u003c/em\u003e tab, make sure the compositor is disabled\n\u003cimg src=\"/images/2016/03/Selection_005.png\" alt=\"Window Manager Tweaks\" /\u003e\u003c/p\u003e\n\n\u003cp\u003eIn addition, depending on your setup, make sure you don\u0026rsquo;t have things like \u003ca href=\"https://wiki.archlinux.org/index.php/Compton\"\u003eCompton\u003c/a\u003e or \u003ca href=\"https://wiki.archlinux.org/index.php/Compiz\"\u003eCompiz\u003c/a\u003e enabled.\u003c/p\u003e\n\n\u003ch2 id=\"start-a-game-in-fullscreen\"\u003eStart a game  in fullscreen\u003c/h2\u003e\n\n\u003cp\u003eAs mentioned, you must run the game in fullscreen mode. G-Sync does not work with window mode in Linux.\u003c/p\u003e\n\n\u003cp\u003eI did notice that there are games which do not enable G-Sync. One example is \u0026ldquo;Cities: Skylines\u0026rdquo;. So make sure to try several games if you don\u0026rsquo;t see the G-Sync logo.\u003c/p\u003e\n\n\u003cp\u003eA good candidate here is Dota 2 since it is free to play. Dota 2 running in \u0026ldquo;Desktop-Friendly Fullscreen\u0026rdquo; does enable G-Sync. As does Portal 2 and XCOM 2.\u003c/p\u003e\n",
            "date_published": "2016-03-05T00:00:00+00:00",
            "image": "https://cowboyprogrammer.org/images/2016/03/NVIDIA-X-Server-Settings_007-1.png"
        }
        
        , {
            "id": "https://cowboyprogrammer.org/2014/12/encrypt-a-btrfs-raid5-array-in-place/",
            "url": "https://cowboyprogrammer.org/2014/12/encrypt-a-btrfs-raid5-array-in-place/",
            "title": "Encrypt a BTRFS RAID5-array in-place",
            "content_html": "\n\n\u003cp\u003eWhen I decided I needed more disk space for media and virtual machine (VM) images, I decided to throw some more money at the problem and get three 3TB hard drives and run \u003ca href=\"https://btrfs.wiki.kernel.org/index.php/Main_Page\"\u003eBTRFS\u003c/a\u003e in \u003ca href=\"http://en.wikipedia.org/wiki/RAID#Standard_levels\"\u003eRAID5\u003c/a\u003e. It\u0026rsquo;s still somewhat experimental, but has proven very solid for me.\u003c/p\u003e\n\n\u003cp\u003eRAID5 means that one drive can completely fail, but all the data is still intact. All one has to do is insert a new drive and the drive will be reconstructed. While RAID5 protects against a complete drive failure, it does nothing to prevent a single bit to be flipped to due cosmic rays or electricity spikes.\u003c/p\u003e\n\n\u003cp\u003eBTRFS is a new filesystem for Linux which does what ZFS does for BSD. The two important features which it offers over previous systems is: copy-on-write (COW), and bitrot protection. See, when running RAID with BTRFS, if a single bit is flipped, BTRFS will detect it when you try to read the file and correct it (if running in RAID so there\u0026rsquo;s redundancy). COW means you can take snapshots of the entire drive instantly without using extra space. Space will only be required when stuff change and diverge from your snapshots.\u003c/p\u003e\n\n\u003cp\u003eSee \u003ca href=\"http://arstechnica.com/information-technology/2014/01/bitrot-and-atomic-cows-inside-next-gen-filesystems/\"\u003eArstechnica\u003c/a\u003e for why \u003cem\u003eBTRFS\u003c/em\u003e is da shit for your next drive or system.\u003c/p\u003e\n\n\u003cp\u003eWhat I did not do at the time was encrypt the drives. \u003ca href=\"http://www.linuxvoice.com/\"\u003eLinux Voice #11\u003c/a\u003e had a very nice article on encryption so I thought I\u0026rsquo;d set it up. And because I\u0026rsquo;m using RAID5, it is actually possible for me to encrypt my drives using \u003ca href=\"https://wiki.archlinux.org/index.php/Dm-crypt/Device_encryption\"\u003edm-crypt/LUKS\u003c/a\u003e in-place, while the whole shebang is mounted, readable and usable :)\u003c/p\u003e\n\n\u003cp\u003eSome initial mistakes meant I had to actually reboot the system, so I thought I\u0026rsquo;d write down how to do it correctly. So to summarize, the goal is to convert three disks to three encrypted disks. BTRFS will be moved from using the drives directly, to using the LUKS-mapped.\u003c/p\u003e\n\n\u003ch3 id=\"unmount-the-raid-system-time-1-second\"\u003eUnmount the raid system (time 1 second)\u003c/h3\u003e\n\n\u003cp\u003eSadly, we need to unmount the volume to be able to \u0026ldquo;remove\u0026rdquo; the drive. This needs to be done so the system can understand that the drive has \u0026ldquo;vanished\u0026rdquo;. It will only stay unmounted for about a minute though.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003esudo umount /path/to/vol\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis is assuming you have configured your \u003cstrong\u003efstab\u003c/strong\u003e with all the details. For example, with something like this (ALWAYS USE UUID!!)\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e# BTRFS Systems\nUUID=\u0026quot;ac21dd50-e6ee-4a9e-abcd-459cba0e6913\u0026quot; /mnt/btrfs  btrfs   defaults       0        0\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNote that no modification of the \u003cstrong\u003efstab\u003c/strong\u003e will be necessary if you have used UUID.\u003c/p\u003e\n\n\u003ch3 id=\"encrypt-one-of-the-drives-time-10-seconds\"\u003eEncrypt one of the drives (time 10 seconds)\u003c/h3\u003e\n\n\u003cp\u003ePick one of the drives to encrypt. Here it\u0026rsquo;s \u003ccode\u003e/dev/sdc\u003c/code\u003e:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003esudo cryptsetup luksFormat -v /dev/sdc\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch3 id=\"open-the-encrypted-drive-time-30-seconds\"\u003eOpen the encrypted drive (time 30 seconds)\u003c/h3\u003e\n\n\u003cp\u003eTo use it, we have to open the drive. You can pick any name you want:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003esudo cryptsetup luksOpen /dev/sdc DRIVENAME\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eTo make this happen on boot, find the new \u003cem\u003eUUID\u003c/em\u003e of \u003ccode\u003e/dev/sdc\u003c/code\u003e with \u003ccode\u003eblkid\u003c/code\u003e:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003esudo blkid\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e\u003cimg src=\"/images/2014/Dec/Screenshot-from-2014-12-29-13-28-29.png\" alt=\"Output of blkid\" /\u003e\u003c/p\u003e\n\n\u003cp\u003eSo for me, the drive has a the following \u003cem\u003eUUID:\u003c/em\u003e \u003ccode\u003ef5d3974c-529e-4574-bbfa-7f3e6db05c65\u003c/code\u003e. Add the following line to \u003ccode\u003e/etc/crypttab\u003c/code\u003e with your desired drive name and your \u003cem\u003eUUID\u003c/em\u003e (without any quotes):\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eDRIVENAME   UUID=your-uuid-without-quotes   none    luks\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNow the system will ask for your password on boot.\u003c/p\u003e\n\n\u003ch3 id=\"add-the-encrypted-drive-to-the-raid-time-20-seconds\"\u003eAdd the encrypted drive to the raid (time 20 seconds)\u003c/h3\u003e\n\n\u003cp\u003eFirst we have to remount the raid system. This will fail because there is a missing drive, unless we add the option \u003cem\u003edegraded\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003esudo mount -o degraded /path/to/vol\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThere will be some complaints about missing drives and such, which is exactly what we expect. Now, just add the new drive:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003esudo btrfs device add /dev/mapper/DRIVENAME /path/to/vol\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch3 id=\"remove-the-missing-drive-time-14-hours\"\u003eRemove the missing drive (time 14 hours)\u003c/h3\u003e\n\n\u003cp\u003eThe final step is to remove the old drive. We can use the special name \u003cem\u003emissing\u003c/em\u003e to remove it:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003esudo btrfs device delete missing /path/to/vol\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis can take a really long time, and by long I mean ~15 hours if you have a terrabyte of data. But, you can still use the drive during this process so just be patient.\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"/images/2014/Dec/Screenshot-from-2014-12-29-12-48-45.png\" alt=\"Balance took 14 hours\" /\u003e\u003c/p\u003e\n\n\u003cp\u003eFor me it took 14 hours 34 minutes. The reason for the delay is because the \u003cem\u003edelete\u003c/em\u003e command will force the system to rebuild the missing drive on your new encrypted volume.\u003c/p\u003e\n\n\u003ch3 id=\"next-drive-rinse-and-repeat\"\u003eNext drive, rinse and repeat\u003c/h3\u003e\n\n\u003cp\u003eJust unmount the raid, encrypt the drive, add it back and delete the missing. Repeat for all drives in your array. Once the last drive is done, unmount the array and remount it without the \u003ccode\u003e-o degraded\u003c/code\u003e option. Now you have an encrypted RAID array.\u003c/p\u003e\n",
            "date_published": "2014-12-28T00:00:00+00:00"
        }
        
    ]
    
}
